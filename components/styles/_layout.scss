// Displays
$displays: 'block', 'flex', 'inline', 'inline-block', 'inline-flex', 'contents';
@each $display in $displays {
	.d-#{$display} {
		display: #{$display};
	}
}

// Sizings
$attrs: 'font-size', 'margin', 'margin-top', 'margin-bottom', 'margin-left', 'margin-right', 'padding', 'padding-top', 'padding-bottom', 'padding-left', 'padding-right', 'padding-vertical', 'padding-horizontal', 'width', 'height', 'line-height', 'column-gap', 'row-gap', 'left', 'right', 'top', 'bottom';
@for $i from 1 through 50 {

	@each $attr in $attrs {
		@if $attr == 'padding-vertical' {
			.padding-vertical-#{$i} {
				&, &[type] {
					padding-top: #{$i}px;
					padding-bottom: #{$i}px;
				}
				
			} 

		} @else if $attr == 'padding-horizontal' {
			.padding-horizontal-#{$i} {
				&, &[type] {
					padding-left: #{$i}px;
					padding-right: #{$i}px;
				}
				
			} 

		} @else {
			.#{$attr}-#{$i} {
				&, &[type] {
					#{$attr}: #{$i}px;
				}
			}
		}
	}

	// Letter spacing and flex
	@if $i >= 1 && $i <= 20 {
		.letter-spacing--#{$i} {
			letter-spacing: -#{$i/100}px;
		}
		.letter-spacing-#{$i} {
			letter-spacing: #{$i/100}px;
		}
		.flex-#{$i}{
			flex: #{$i};
		}
		.border-radius-#{$i} {
			&, &[type] {
				border-radius: #{$i}px;
				overflow: hidden;
			}
		}
	}
}

// Flex content justify
$justifications: 'space-between', 'space-around', 'center';
@each $justfication in $justifications {
	.justify-content-#{$justfication} {
		justify-content: #{$justfication};
	}
}

// Align self
$align_selfs: 'center', 'auto';
@each $align_self in $align_selfs {
	.align-self-#{$align_self} {
		align-self: #{$align_self};
	}
}

// Cursors
$cursors: 'pointer', 'default';
@each $cursor in $cursors {
	.cursor-#{$cursor} {
		cursor: #{$cursor};
	}
}

// Vertical alignments
$v_alignments: 'middle', 'top';
@each $v_alignment in $v_alignments {
	.vertical-align-#{$v_alignment} {
		vertical-align: #{$v_alignment};
	}
}

// Positions
$positions: 'absolute', 'fixed', 'static';
@each $position in $positions {
	.position-#{$position} {
		position: #{$position};
	}
}

// Borders
$borders: 'border', 'border-bottom', 'border-top', 'border-left', 'border-right';
@each $border in $borders {
	.#{$border}-1 {
		&, &[type] {
			#{$border}-width: 1px;
			#{$border}-style: solid;
		}
		
	}

	.#{$border}-1-5 {
		&, &[type] {
			#{$border}-width: 1.5px;
			#{$border}-style: solid;
		}
	}
}

.align-items-center {
	align-items: center;
}

.h-full {
	min-height: 100%;
}

.w-full {
	min-width: 100%;
}

.background-color-white {
	background-color: white;
}

// Grid
.column {
	display: flex;
	align-items: stretch;
	margin-left: -10px;
	margin-right: -10px;

	&>div{
		margin: 0 10px;
		flex: 1;
	}
}

.border-color-tertiary {
	&, &[type] {
		border-color: var(--crewhrm-border-color-tertiary);

		&:focus {
			border-color: var(--crewhrm-border-color-primary);
		}
	}
}
